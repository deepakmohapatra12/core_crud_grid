app.component.html
--------------------
<hello name="{{ name }}"></hello>

<div *ngFor="let data of myData">
<p *ngFor="let v of data.values;let i=index">
  <input type="checkbox" name="{{i}}" (click)="getChecked(i)"> {{v.name}}
</p>
</div>
<div *ngFor="let data of myData">
<p *ngFor="let v of data.values;let i=index">
  <span *ngIf="v['selected']">{{v.name}}</span>
</p>
</div>

<button (click)="getData()">GetSelectedData</button>

<p *ngFor="let n of fetched">
  {{n.name}}
</p>
app.component.ts
-----------------
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'my-app',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  name = 'Angular';
  selected: any;
  fetched = [];
  ngOnInit() {}

  myData = [
    {
      name: 'line1',
      values: [
        {
          name: 'Deepak'
        },
        {
          name: 'Balu'
        },
        {
          name: 'Nadini'
        }
      ]
    }
  ]

  getChecked(i) {
    if (this.myData[0]['values'][i]['selected'] = ((!this.myData[0]['values'][i]['selected']) ||
      this.myData[0]['values'][i]['selected'] === false)) {
      true
    }
    else {
      false
    }
  }

  getData() {
    this.fetched = this.myData[0]['values'].filter((res) => {
      if (res['selected'] === true) {
        return res;
      }
    })
    console.table(this.fetched);
  }





I)-----for creating a new component and integrate in common-ui-dewdrops--------------------
-------------------------------------------------------------------------------------------------
Step-1
-> create a common component which is assign to you(tagCommonComponent/templateCommonComponent)
-> Folder Structure :- dd-common/dewdrops/common/
Step-2 
->Define module for that component.(tagCommonComponentModule/templateCommonComponentModule) (ng g m templateCommonComponentModule)
Step-3
->make a entry in index.ts
(sample)
export { DelegatePopupComponent } from './delegate-popup/delegate-popup.component';
export * from './delegate-popup/delegate-popup.module';
Step-4
->navigate to docs.
->create a docs component for given component.
step-5
->go to "src\dd-common\dewdrops\dewdrops.component.ts"
->make a entry in list.
step-6
->got to "src\dd-common\dewdrops\dewdrops-routing.module.ts"
->define a roue
->import module which is used in your docs component.
------import main logical component respective module import in dewdrops-routing.module.ts
->declare docs component in declaration part.


point)while working on common component for hardcoded value follow the instructions below
------------------------------------------------------------------------------------------
For hardcoded value
----------------------
1) go to src/assets.i18n/en.json
2) write the meaningful tags like --   "DEW_DROPS_COMMON_TEMPLATE_SEARCH_CREATED_ON":"Created_On"
3)go to the corresponding component module like (templatesearch.module.ts) and import the ---import { TranslateModule } from 'ng2-translate';--
4) go to the corresponding component like (templatesearch.component.ts) and import the     constructor(private _translate: TranslateService) { } and also import it.
5)In the place of hardcoded value change that to the---- {{"DEW_DROPS_COMMON_TEMPLATE_SEARCH_CREATED_ON" | translate}} ----


For common component selectors like input,autocomplete,dropdown or anything else
----------------------------------------------------------------------------------
1)if we are not using any [maxlength] or [minLength] or [required] or [textModel] or [modelChange] then remove it .
2)if we are using all these things then go to the component.ts file and write with @Input decorator.



II)Swagger api checking methods
------------------------------------

1)http://dev.dewdropsbff.zycus.net/ 
  http://dev.dewdropsbff.zycus.net/api/swagger.json 
2)navin.imanage@zycus.com 
 Pass@123  


III)git gub details
--------------------------
first pull from master branch
1) git checkout master
2) git pull

1)go to the ddcommon folder and open the git bash there
2) And start writting the command .....<git status>
3)for creating a branch <git checkout -b DDCC-18>
4)git add .
5)git commit
6)git push or git push --set-upstream origin DDCC-18
7)git checkout -b branchname_as_ticket_number
8)git checkout master
9)git pull
10)git checkout DDCC-18
11)git merge
12)git status
13)git push
14)git push --set-upstream origin DDCC-18
15)if local reference error have obtained while doing pull from master then run the below command
----------------------------
git gc --prune=now
---------------------------


After getting confliction go to the master

git checkout master
git pull
git checkout DDCC-18
git merge master

save all the conflicted files

git checkout DDCC_18
git add .
git commit -m "resolve the confliction"
git push




git submodule update --remote





IV)visual studio code shortcuts
-----------------------------------
1) Fn + Alt + up arrow key or down arrow key -----for shifting the lines up and down






https://stackblitz.com/edit/angular-component-accordion-example?file=app%2Fcomponents%2Faccordion%2Faccordion.component.ts

http://training.fabiobiondi.io/2017/07/10/create-an-accordion-component-in-angular-parent-children-communication/

https://stackblitz.com/edit/angular-xovwu7?file=app%2Fapp.component.ts





ICONTRACT
-----------
1)localhost:4204
2)bipin.anghan01101988@zycus.com
  Bipin@007 

3)http://local.icontract.zycus.net:4204/#/repository



//FOR CONVERTING IF ELSE TERNARY TO NORMAL IF ELSE
http://converter.website-dev.eu/







